# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    env:    
      FunctionalTestsPath: ./tests/FunctionalTests/EDA.Functional.Tests.csproj
      IntegrationTestsPath: ./tests/IntegrationTests/EDA.Integration.Tests.csproj
      UnitTestsPath: ./tests/UnitTests/EDA.Unit.Tests.csproj
      PresentationProject: src/Presentation/Api
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 6.0.x
    - name: Executar testes Funcionais
      run: dotnet test ${{env.FunctionalTestsPath}} --verbosity minimal
    - name: Executar testes Integracao
      run: dotnet test ${{env.IntegrationTestsPath}} --verbosity minimal
    #- name: Executar testes Unitarios
    #  run: dotnet test ${{env.UnitTestsPath}} --verbosity minimal
      
    - name: Executar restore Api
      run: dotnet restore ./src/Presentation/Api/EDA.Api.csproj
    #- name: entrar na pasta
    #  run: cd ${{env.PresentationProject}}
    - name: Executar build Api
      run: dotnet build ./src/Presentation/Api/EDA.Api.csproj --no-restore      
    
    #- name: Test
    #  run: dotnet test  ${{env.PresentationProject}} --no-build --verbosity normal
      
    - name: Gerar publish Api
      run: dotnet publish  ${{env.PresentationProject}} -c Release -o app 
      
    #- name: Restore dependencies
    #  run: dotnet restore
    #- name: Build
    #  run: dotnet build --no-restore
    #- name: Test
    #  run: dotnet test --no-build --verbosity normal
